# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

gardener-extension-shoot-falco-service:
  templates:
    helmcharts:
    - &shoot-falco-service
      name: shoot-falco-service
      dir: charts/gardener-extension-shoot-falco-service
      registry: europe-docker.pkg.dev/gardener-project/snapshots/charts/gardener/extensions
      mappings:
      - ref: ocm-resource:gardener-extension-shoot-falco-service.repository
        attribute: image.repository
      - ref: ocm-resource:gardener-extension-shoot-falco-service.tag
        attribute: image.tag
    - &shoot-falco-service-admission-application
      name: admission-shoot-falco-service-application
      dir: charts/gardener-extension-admission-shoot-falco-service/charts/application
      registry: europe-docker.pkg.dev/gardener-project/snapshots/charts/gardener/extensions
      mappings:
      - ref: ocm-resource:gardener-extension-admission-shoot-falco-service.repository
        attribute: image.repository
      - ref: ocm-resource:gardener-extension-admission-shoot-falco-service.tag
        attribute: image.tag
    - &shoot-falco-service-admission-runtime
      name: admission-shoot-falco-service-runtime
      dir: charts/gardener-extension-admission-shoot-falco-service/charts/runtime
      registry: europe-docker.pkg.dev/gardener-project/snapshots/charts/gardener/extensions
      mappings:
      - ref: ocm-resource:gardener-extension-admission-shoot-falco-service.repository
        attribute: image.repository
      - ref: ocm-resource:gardener-extension-admission-shoot-falco-service.tag
        attribute: image.tag

  base_definition:
    repo:
      source_labels:
      - name: cloud.gardener.cnudie/dso/scanning-hints/source_analysis/v1
        value:
          policy: skip
          comment: |
            We use gosec for sast scanning, see attached log.
    traits:
      component_descriptor:
        ocm_repository: europe-docker.pkg.dev/gardener-project/snapshots
      version:
        preprocess: 'inject-commit-hash'
  jobs:
    create_update_pull_requests:
      repo:
        trigger: false
        disable_ci_skip: true
      traits:
        component_descriptor:
          ocm_repository: europe-docker.pkg.dev/gardener-project/releases
        update_component_deps: ~
        cronjob:
          interval: '10m'
        version: ~
    head-update:
      traits:
        draft_release: ~
        component_descriptor:
          ocm_repository_mappings:
            - repository: europe-docker.pkg.dev/gardener-project/releases
        publish:
          dockerimages:
            gardener-extension-shoot-falco-service:
              image: europe-docker.pkg.dev/gardener-project/snapshots/gardener/extensions/shoot-falco-service
              dockerfile: 'Dockerfile'
              target: gardener-extension-shoot-falco-service
            gardener-extension-admission-shoot-falco-service:
              image: europe-docker.pkg.dev/gardener-project/snapshots/gardener/extensions/admission-shoot-falco-service
              dockerfile: 'Dockerfile'
              target: gardener-extension-admission-shoot-falco-service
          helmcharts:
          - *shoot-falco-service
          - *shoot-falco-service-admission-application
          - *shoot-falco-service-admission-runtime
      steps:
        verify:
          image: &golang-test 'golang:1.24.4'
        verify-falco-rules:
          privilege_mode: privileged
        provide-falco-profile:
          execute:
          - /bin/bash
          - -c
          - 'mkdir -p falco && cp "${MAIN_REPO_DIR}"/falco/falco-profile.yaml falco'
          output_dir: falco
        provide-falco-rules:
          execute:
          - /bin/bash
          - -c
          - 'mkdir -p falco-rules && cp -r "${MAIN_REPO_DIR}"/falco/rules falco-rules'
          output_dir: falco-rules
        provide-falco-crds:
          execute:
          - /bin/bash
          - -c
          - 'mkdir -p falco-crds && cp -r "${MAIN_REPO_DIR}"/crds falco-crds'
          output_dir: falco-crds
    pull-request:
      traits:
        pull-request: ~
        component_descriptor:
          ocm_repository_mappings:
            - repository: europe-docker.pkg.dev/gardener-project/releases
      steps:
        verify:
          image: *golang-test
        verify-falco-rules:
          privilege_mode: privileged
    release:
      steps:
        verify:
          image: *golang-test
        provide-falco-profile:
          execute:
          - /bin/bash
          - -c
          - 'mkdir -p falco && cp "${MAIN_REPO_DIR}"/falco/falco-profile.yaml falco'
          output_dir: falco
        provide-falco-rules:
          execute:
          - /bin/bash
          - -c
          - 'mkdir -p falco-rules && cp -r "${MAIN_REPO_DIR}"/falco/rules falco-rules'
          output_dir: falco-rules
        provide-falco-crds:
          execute:
          - /bin/bash
          - -c
          - 'mkdir -p falco-crds && cp -r "${MAIN_REPO_DIR}"/crds falco-crds'
          output_dir: falco-crds

      traits:
        version:
          preprocess: 'finalize'
        component_descriptor:
          ocm_repository: europe-docker.pkg.dev/gardener-project/releases
        release:
          nextversion: 'bump_minor'
          next_version_callback: '.ci/prepare_release'
          release_callback: '.ci/prepare_release'
          assets:
          - type: build-step-log
            step_name: verify
            purposes:
            - lint
            - sast
            - gosec
            comment: |
              We use gosec (linter) for SAST scans, see: https://github.com/securego/gosec.
              Enabled by https://github.com/gardener/gardener-extension-shoot-falco-service/pull/87
          - type: build-step-file
            step_name: provide-falco-profile
            step_output_dir: falco
            path: 'falco-profile.yaml'
            mode: single-file
            name: falcoprofile
          - type: build-step-file
            step_name: provide-falco-rules
            step_output_dir: falco-rules
            path: 'rules/*'
            mode: tar
            name: falco-rules
          - type: build-step-file
            step_name: provide-falco-crds
            step_output_dir: falco-crds
            path: '*'
            mode: tar
            name: falco-crds

        publish:
          oci-builder: docker-buildx
          platforms:
          - linux/amd64
          - linux/arm64
          dockerimages:
            gardener-extension-shoot-falco-service:
              image: europe-docker.pkg.dev/gardener-project/releases/gardener/extensions/shoot-falco-service
              tag_as_latest: true
              target: gardener-extension-shoot-falco-service
            gardener-extension-admission-shoot-falco-service:
              image: europe-docker.pkg.dev/gardener-project/releases/gardener/extensions/admission-shoot-falco-service
              tag_as_latest: true
              target: gardener-extension-admission-shoot-falco-service
          helmcharts:
          - <<: *shoot-falco-service
            registry: europe-docker.pkg.dev/gardener-project/releases/charts/gardener/extensions
          - <<: *shoot-falco-service-admission-application
            registry: europe-docker.pkg.dev/gardener-project/releases/charts/gardener/extensions
          - <<: *shoot-falco-service-admission-runtime
            registry: europe-docker.pkg.dev/gardener-project/releases/charts/gardener/extensions
