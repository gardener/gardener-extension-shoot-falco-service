INFO     conftest:conftest.py:78 Requesting shoot kubeconfig for garden-i573718l/dev-i573718ls: /apis/core.gardener.cloud/v1beta1/namespaces/garden-i573718l/shoots/dev-i573718ls/adminkubeconfig
INFO     test_falco:test_falco.py:31 Making sure Falco extension is not deployed in shoot dev-i573718ls
INFO     falcotest.falcolib:falcolib.py:624 Pod 'sample-events' not found, ignoring: (404)
Reason: Not Found
HTTP response headers: HTTPHeaderDict({'Audit-Id': '51b42e26-60b9-475e-bffb-603ad6b005ef', 'Cache-Control': 'no-cache, private', 'Content-Type': 'application/json', 'X-Kubernetes-Pf-Flowschema-Uid': 'b2b338ed-2ec2-4a24-9579-10bc6e9cd1d7', 'X-Kubernetes-Pf-Prioritylevel-Uid': '4db78dfa-b92c-47fd-bd65-b6749ea47e14', 'Date': 'Thu, 17 Apr 2025 13:29:44 GMT', 'Content-Length': '194'})
HTTP response body: {"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"pods \"sample-events\" not found","reason":"NotFound","details":{"name":"sample-events","kind":"pods"},"code":404}


INFO     test_falco:test_falco.py:400 Deploying Falco extension
INFO     falcotest.falcolib:falcolib.py:392 Adding falco extension to shoot:
{
    "type": "shoot-falco-service",
    "providerConfig": {
        "apiVersion": "falco.extensions.gardener.cloud/v1alpha1",
        "kind": "FalcoServiceConfig",
        "autoUpdate": true,
        "destinations": [
            {
                "name": "stdout"
            }
        ]
    }
}
INFO     falcotest.falcolib:falcolib.py:411 Adding falco extension to shoot dev-i573718ls, resource /apis/core.gardener.cloud/v1beta1/namespaces/garden-i573718l/shoots/dev-i573718ls, patch {'spec': {'extensions': [{'type': 'shoot-falco-service', 'providerConfig': {'apiVersion': 'falco.extensions.gardener.cloud/v1alpha1', 'kind': 'FalcoServiceConfig', 'autoUpdate': True, 'destinations': [{'name': 'stdout'}]}}]}}
INFO     falcotest.falcolib:falcolib.py:522 Waiting for falco extension to be deployed to 2 nodes
INFO     falcotest.falcolib:falcolib.py:491 Checking if all pods and containers are running
INFO     root:falcolib.py:506 Only 0 pods found, expected at least 2
INFO     root:falcolib.py:535 Not all expected falco pods are running or deployed
INFO     falcotest.falcolib:falcolib.py:491 Checking if all pods and containers are running
INFO     root:falcolib.py:506 Only 0 pods found, expected at least 2
INFO     root:falcolib.py:535 Not all expected falco pods are running or deployed
INFO     falcotest.falcolib:falcolib.py:491 Checking if all pods and containers are running
INFO     root:falcolib.py:506 Only 0 pods found, expected at least 2
INFO     root:falcolib.py:535 Not all expected falco pods are running or deployed
INFO     falcotest.falcolib:falcolib.py:491 Checking if all pods and containers are running
INFO     root:falcolib.py:506 Only 0 pods found, expected at least 2
INFO     root:falcolib.py:535 Not all expected falco pods are running or deployed
INFO     falcotest.falcolib:falcolib.py:491 Checking if all pods and containers are running
INFO     falcotest.falcolib:falcolib.py:500 Pod {'conditions': [{'last_probe_time': None,
                 'last_transition_time': datetime.datetime(2025, 4, 17, 13, 30, 1, tzinfo=tzlocal()),
                 'message': None,
                 'reason': None,
                 'status': 'True',
                 'type': 'PodReadyToStartContainers'},
                {'last_probe_time': None,
                 'last_transition_time': datetime.datetime(2025, 4, 17, 13, 29, 59, tzinfo=tzlocal()),
                 'message': None,
                 'reason': None,
                 'status': 'True',
                 'type': 'Initialized'},
                {'last_probe_time': None,
                 'last_transition_time': datetime.datetime(2025, 4, 17, 13, 29, 59, tzinfo=tzlocal()),
                 'message': 'containers with unready status: [falco]',
                 'reason': 'ContainersNotReady',
                 'status': 'False',
                 'type': 'Ready'},
                {'last_probe_time': None,
                 'last_transition_time': datetime.datetime(2025, 4, 17, 13, 29, 59, tzinfo=tzlocal()),
                 'message': 'containers with unready status: [falco]',
                 'reason': 'ContainersNotReady',
                 'status': 'False',
                 'type': 'ContainersReady'},
                {'last_probe_time': None,
                 'last_transition_time': datetime.datetime(2025, 4, 17, 13, 29, 59, tzinfo=tzlocal()),
                 'message': None,
                 'reason': None,
                 'status': 'True',
                 'type': 'PodScheduled'}],
 'container_statuses': [{'allocated_resources': None,
                         'allocated_resources_status': None,
                         'container_id': 'containerd://a7eb3d7639a69ee0186731884258ab745755cd8dd8f519e9d9840db89dea6070',
                         'image': 'sha256:ca1174ea29b36e40080aa2cda5c67eb15db0c7c64339aedb07690545b702d9d6',
                         'image_id': 'europe-docker.pkg.dev/sap-se-gcp-k8s-delivery/releases-public/registry-1_docker_io/falcosecurity/falco-distroless@sha256:4bf7144f69292997368ac9077fb509513d1946aa252854430c0c87299ed4f04e',
                         'last_state': {'running': None,
                                        'terminated': None,
                                        'waiting': None},
                         'name': 'falco',
                         'ready': False,
                         'resources': None,
                         'restart_count': 0,
                         'started': True,
                         'state': {'running': {'started_at': datetime.datetime(2025, 4, 17, 13, 30, tzinfo=tzlocal())},
                                   'terminated': None,
                                   'waiting': None},
                         'user': None,
                         'volume_mounts': [{'mount_path': '/etc/falco/certs',
                                            'name': 'certificates',
                                            'read_only': None,
                                            'recursive_read_only': None},
                                           {'mount_path': '/root/.falco',
                                            'name': 'root-falco-fs',
                                            'read_only': None,
                                            'recursive_read_only': None},
                                           {'mount_path': '/host/proc',
                                            'name': 'proc-fs',
                                            'read_only': None,
                                            'recursive_read_only': None},
                                           {'mount_path': '/host/run/containerd/containerd.sock',
                                            'name': 'containerd-socket',
                                            'read_only': None,
                                            'recursive_read_only': None},
                                           {'mount_path': '/etc/falco/falco.yaml',
                                            'name': 'falco-yaml',
                                            'read_only': None,
                                            'recursive_read_only': None},
                                           {'mount_path': '/etc/falco/rules.d',
                                            'name': 'rules-volume',
                                            'read_only': True,
                                            'recursive_read_only': 'Disabled'},
                                           {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                            'name': 'kube-api-access-gardener',
                                            'read_only': True,
                                            'recursive_read_only': 'Disabled'}]},
                        {'allocated_resources': None,
                         'allocated_resources_status': None,
                         'container_id': 'containerd://4545f8f0ed5922eb4608fa86a0df8a0fa95023143e9fe46033493b10a581f117',
                         'image': 'docker.io/falcosecurity/falcosidekick:2.28.0',
                         'image_id': 'docker.io/falcosecurity/falcosidekick@sha256:945a409dbda3c9f279a2051376a892e6271d00ba93aaa4e1f11a1a4a2ab84c2d',
                         'last_state': {'running': None,
                                        'terminated': None,
                                        'waiting': None},
                         'name': 'falco-ping',
                         'ready': True,
                         'resources': None,
                         'restart_count': 0,
                         'started': True,
                         'state': {'running': {'started_at': datetime.datetime(2025, 4, 17, 13, 30, tzinfo=tzlocal())},
                                   'terminated': None,
                                   'waiting': None},
                         'user': None,
                         'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                            'name': 'kube-api-access-gardener',
                                            'read_only': True,
                                            'recursive_read_only': 'Disabled'}]}],
 'ephemeral_container_statuses': None,
 'host_i_ps': [{'ip': '10.181.25.3'}],
 'host_ip': '10.181.25.3',
 'init_container_statuses': None,
 'message': None,
 'nominated_node_name': None,
 'phase': 'Running',
 'pod_i_ps': [{'ip': '100.80.0.60'}],
 'pod_ip': '100.80.0.60',
 'qos_class': 'Burstable',
 'reason': None,
 'resize': None,
 'resource_claim_statuses': None,
 'start_time': datetime.datetime(2025, 4, 17, 13, 29, 59, tzinfo=tzlocal())}
INFO     falcotest.falcolib:falcolib.py:500 Pod {'conditions': [{'last_probe_time': None,
                 'last_transition_time': datetime.datetime(2025, 4, 17, 13, 30, tzinfo=tzlocal()),
                 'message': None,
                 'reason': None,
                 'status': 'True',
                 'type': 'PodReadyToStartContainers'},
                {'last_probe_time': None,
                 'last_transition_time': datetime.datetime(2025, 4, 17, 13, 29, 59, tzinfo=tzlocal()),
                 'message': None,
                 'reason': None,
                 'status': 'True',
                 'type': 'Initialized'},
                {'last_probe_time': None,
                 'last_transition_time': datetime.datetime(2025, 4, 17, 13, 29, 59, tzinfo=tzlocal()),
                 'message': 'containers with unready status: [falco]',
                 'reason': 'ContainersNotReady',
                 'status': 'False',
                 'type': 'Ready'},
                {'last_probe_time': None,
                 'last_transition_time': datetime.datetime(2025, 4, 17, 13, 29, 59, tzinfo=tzlocal()),
                 'message': 'containers with unready status: [falco]',
                 'reason': 'ContainersNotReady',
                 'status': 'False',
                 'type': 'ContainersReady'},
                {'last_probe_time': None,
                 'last_transition_time': datetime.datetime(2025, 4, 17, 13, 29, 59, tzinfo=tzlocal()),
                 'message': None,
                 'reason': None,
                 'status': 'True',
                 'type': 'PodScheduled'}],
 'container_statuses': [{'allocated_resources': None,
                         'allocated_resources_status': None,
                         'container_id': 'containerd://9d7272ddefffccbfd13f772337e29319c05cba4daa60bfc49c1887f36de12b12',
                         'image': 'sha256:ca1174ea29b36e40080aa2cda5c67eb15db0c7c64339aedb07690545b702d9d6',
                         'image_id': 'europe-docker.pkg.dev/sap-se-gcp-k8s-delivery/releases-public/registry-1_docker_io/falcosecurity/falco-distroless@sha256:4bf7144f69292997368ac9077fb509513d1946aa252854430c0c87299ed4f04e',
                         'last_state': {'running': None,
                                        'terminated': None,
                                        'waiting': None},
                         'name': 'falco',
                         'ready': False,
                         'resources': None,
                         'restart_count': 0,
                         'started': True,
                         'state': {'running': {'started_at': datetime.datetime(2025, 4, 17, 13, 30, tzinfo=tzlocal())},
                                   'terminated': None,
                                   'waiting': None},
                         'user': None,
                         'volume_mounts': [{'mount_path': '/etc/falco/certs',
                                            'name': 'certificates',
                                            'read_only': None,
                                            'recursive_read_only': None},
                                           {'mount_path': '/root/.falco',
                                            'name': 'root-falco-fs',
                                            'read_only': None,
                                            'recursive_read_only': None},
                                           {'mount_path': '/host/proc',
                                            'name': 'proc-fs',
                                            'read_only': None,
                                            'recursive_read_only': None},
                                           {'mount_path': '/host/run/containerd/containerd.sock',
                                            'name': 'containerd-socket',
                                            'read_only': None,
                                            'recursive_read_only': None},
                                           {'mount_path': '/etc/falco/falco.yaml',
                                            'name': 'falco-yaml',
                                            'read_only': None,
                                            'recursive_read_only': None},
                                           {'mount_path': '/etc/falco/rules.d',
                                            'name': 'rules-volume',
                                            'read_only': True,
                                            'recursive_read_only': 'Disabled'},
                                           {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                            'name': 'kube-api-access-gardener',
                                            'read_only': True,
                                            'recursive_read_only': 'Disabled'}]},
                        {'allocated_resources': None,
                         'allocated_resources_status': None,
                         'container_id': 'containerd://a3ef121a303033de42892de4765cc044bc6583f3a595c836f958a0f303ff9464',
                         'image': 'docker.io/falcosecurity/falcosidekick:2.28.0',
                         'image_id': 'docker.io/falcosecurity/falcosidekick@sha256:945a409dbda3c9f279a2051376a892e6271d00ba93aaa4e1f11a1a4a2ab84c2d',
                         'last_state': {'running': None,
                                        'terminated': None,
                                        'waiting': None},
                         'name': 'falco-ping',
                         'ready': True,
                         'resources': None,
                         'restart_count': 0,
                         'started': True,
                         'state': {'running': {'started_at': datetime.datetime(2025, 4, 17, 13, 30, tzinfo=tzlocal())},
                                   'terminated': None,
                                   'waiting': None},
                         'user': None,
                         'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',
                                            'name': 'kube-api-access-gardener',
                                            'read_only': True,
                                            'recursive_read_only': 'Disabled'}]}],
 'ephemeral_container_statuses': None,
 'host_i_ps': [{'ip': '10.181.1.226'}],
 'host_ip': '10.181.1.226',
 'init_container_statuses': None,
 'message': None,
 'nominated_node_name': None,
 'phase': 'Running',
 'pod_i_ps': [{'ip': '100.80.2.85'}],
 'pod_ip': '100.80.2.85',
 'qos_class': 'Burstable',
 'reason': None,
 'resize': None,
 'resource_claim_statuses': None,
 'start_time': datetime.datetime(2025, 4, 17, 13, 29, 59, tzinfo=tzlocal())}
INFO     root:falcolib.py:541 All falco pods are running, waiting a bit longer to re-check
INFO     root:falcolib.py:553 Pod falco-bz7zt:  Running
INFO     root:falcolib.py:553 Pod falco-lmh89:  Running
INFO     falcotest.falcolib:falcolib.py:559 Getting falco sidekick pods
INFO     test_falco:test_falco.py:421 Running event generator
INFO     falcotest.falcolib:falcolib.py:652 Pod 'sample-events' created. Pod status: Pending
INFO     falcotest.falcolib:falcolib.py:660 Logs:
 [36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.DetectCryptoMinersUsingTheStratumProtocol
[36mINFO[0m action executed                               [36maction[0m=syscall.DetectCryptoMinersUsingTheStratumProtocol
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.PtraceAttachedToProcess
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.RemoveBulkDataFromDisk
[36mINFO[0m action executed                               [36maction[0m=syscall.RemoveBulkDataFromDisk
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.MountLaunchedInPrivilegedContainer
[33mWARN[0m action skipped                                [33maction[0m=syscall.MountLaunchedInPrivilegedContainer [33mreason[0m="privileged container required"
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.PacketSocketCreatedInContainer
[36mINFO[0m action executed                               [36maction[0m=syscall.PacketSocketCreatedInContainer
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.FilelessExecutionViaMemfdCreate
[36mINFO[0m action executed                               [36maction[0m=syscall.FilelessExecutionViaMemfdCreate
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.CreateFilesBelowDev
[36mINFO[0m action executed                               [36maction[0m=syscall.CreateFilesBelowDev
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.PolkitLocalPrivilegeEscalationVulnerabilityCVE20214034
[36mINFO[0m run as "daemon"                               [36maction[0m=syscall.PolkitLocalPrivilegeEscalationVulnerabilityCVE20214034 [36mcmdArgs[0m="[]" [36mcmdName[0m=/usr/bin/pkexec [36muser[0m=daemon
[33mWARN[0m action skipped                                [33maction[0m=syscall.PolkitLocalPrivilegeEscalationVulnerabilityCVE20214034 [33mreason[0m="pkexec execution failed with exit code 127 (might be ok) - probably patched and not vulnerable to CVE-2021-4034"
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.LaunchIngressRemoteFileCopyToolsInContainer
[36mINFO[0m action executed                               [36maction[0m=syscall.LaunchIngressRemoteFileCopyToolsInContainer
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.NetcatRemoteCodeExecutionInContainer
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.WriteBelowMonitoredDir
[36mINFO[0m action executed                               [36maction[0m=syscall.WriteBelowMonitoredDir
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.CreateHiddenFilesOrDirectories
[36mINFO[0m action executed                               [36maction[0m=syscall.CreateHiddenFilesOrDirectories
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.CreateSymlinkOverSensitiveFiles
[36mINFO[0m action executed                               [36maction[0m=syscall.CreateSymlinkOverSensitiveFiles
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.ModifyContainerEntrypoint
[36mINFO[0m action executed                               [36maction[0m=syscall.ModifyContainerEntrypoint
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.DirectoryTraversalMonitoredFileRead
[36mINFO[0m action executed                               [36maction[0m=syscall.DirectoryTraversalMonitoredFileRead
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.ExecutionFromDevShm
[36mINFO[0m action executed                               [36maction[0m=syscall.ExecutionFromDevShm
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.LaunchRemoteFileCopyToolsInContainer
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.RunShellUntrusted
[36mINFO[0m spawn as "httpd"                              [36maction[0m=syscall.RunShellUntrusted [36margs[0m="^helper.RunShell$"
[36mINFO[0m sleep for 100ms                               [36maction[0m=helper.RunShell [36mas[0m=httpd
[36mINFO[0m action executed                               [36maction[0m=helper.RunShell [36mas[0m=httpd
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.WriteBelowBinaryDir
[36mINFO[0m action executed                               [36maction[0m=syscall.WriteBelowBinaryDir
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.PtraceAntiDebugAttempt
[36mINFO[0m action executed                               [36maction[0m=syscall.PtraceAntiDebugAttempt
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.ModifyBinaryDirs
[36mINFO[0m action executed                               [36maction[0m=syscall.ModifyBinaryDirs
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.ReadSensitiveFileUntrusted
[36mINFO[0m action executed                               [36maction[0m=syscall.ReadSensitiveFileUntrusted
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.SystemUserInteractive
[36mINFO[0m run as "daemon"                               [36maction[0m=syscall.SystemUserInteractive [36mcmdArgs[0m="[]" [36mcmdName[0m=/bin/login [36muser[0m=daemon
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.ReadSensitiveFileTrustedAfterStartup
[36mINFO[0m spawn as "httpd"                              [36maction[0m=syscall.ReadSensitiveFileTrustedAfterStartup [36margs[0m="^syscall.ReadSensitiveFileUntrusted$ --sleep 6s"
[36mINFO[0m sleep for 6s                                  [36maction[0m=syscall.ReadSensitiveFileUntrusted [36mas[0m=httpd
[36mINFO[0m action executed                               [36maction[0m=syscall.ReadSensitiveFileUntrusted [36mas[0m=httpd
[36mINFO[0m sleep for 100ms                               [36maction[0m=syscall.SetSetuidOrSetgidBit

INFO     falcotest.falcolib:falcolib.py:622 Pod 'sample-events' deleted
INFO     test_falco:test_falco.py:425 Waiting for Falco log to be flushed to log file
INFO     test_falco:test_falco.py:428 Making sure expected events are in Falco log
INFO     falcotest.falcolib:falcolib.py:44 Pod falco-bz7zt: Running
INFO     falcotest.falcolib:falcolib.py:44 Pod falco-lmh89: Running
INFO     test_falco:test_falco.py:36 Undepoying falco extension
INFO     falcotest.falcolib:falcolib.py:218 Falco extension is deployed, undeploying
INFO     falcotest.falcolib:falcolib.py:275 Removing falco extension from shoot dev-i573718ls, patch [{'op': 'remove', 'path': '/spec/extensions/0'}]
INFO     falcotest.falcolib:falcolib.py:461 Waiting for falco extension to be undeployed
INFO     root:falcolib.py:470 Falco pods are still running
INFO     root:falcolib.py:472 Pod falco-bz7zt:  Running
INFO     root:falcolib.py:472 Pod falco-lmh89:  Running
INFO     root:falcolib.py:470 Falco pods are still running
INFO     root:falcolib.py:472 Pod falco-bz7zt:  Running
INFO     root:falcolib.py:472 Pod falco-lmh89:  Running
INFO     root:falcolib.py:470 Falco pods are still running
INFO     root:falcolib.py:472 Pod falco-bz7zt:  Running
INFO     root:falcolib.py:472 Pod falco-lmh89:  Running
INFO     root:falcolib.py:470 Falco pods are still running
INFO     root:falcolib.py:472 Pod falco-bz7zt:  Running
INFO     root:falcolib.py:472 Pod falco-lmh89:  Running
INFO     root:falcolib.py:470 Falco pods are still running
INFO     root:falcolib.py:472 Pod falco-bz7zt:  Failed
INFO     root:falcolib.py:468 Falco pods are not running anymore
INFO     falcotest.falcolib:falcolib.py:624 Pod 'sample-events' not found, ignoring: (404)
Reason: Not Found
HTTP response headers: HTTPHeaderDict({'Audit-Id': 'f384c9ac-a15a-4fe9-909f-0a72156c2b53', 'Cache-Control': 'no-cache, private', 'Content-Type': 'application/json', 'X-Kubernetes-Pf-Flowschema-Uid': 'b2b338ed-2ec2-4a24-9579-10bc6e9cd1d7', 'X-Kubernetes-Pf-Prioritylevel-Uid': '4db78dfa-b92c-47fd-bd65-b6749ea47e14', 'Date': 'Thu, 17 Apr 2025 13:31:38 GMT', 'Content-Length': '194'})
HTTP response body: {"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"pods \"sample-events\" not found","reason":"NotFound","details":{"name":"sample-events","kind":"pods"},"code":404}


